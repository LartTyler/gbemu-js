{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Emulator/CPU/Clock.ts","webpack:///./src/Emulator/CPU/InstructionSet/Operators/Load.ts","webpack:///./src/Emulator/CPU/InstructionSet/index.ts","webpack:///./src/Emulator/CPU/Registers.ts","webpack:///./src/Emulator/CPU/index.ts","webpack:///./src/Emulator/GPU/Color.ts","webpack:///./src/Emulator/GPU/index.ts","webpack:///./src/Emulator/Hardware.ts","webpack:///./src/Emulator/Memory/Bios.ts","webpack:///./src/Emulator/Memory/index.ts","webpack:///./src/Emulator/util.ts","webpack:///./src/Monitor.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","/**\n * @see https://en.wikipedia.org/wiki/Zilog_Z80#Instruction_execution\n */\nexport interface ClockInterface {\n\t/**\n\t * Machine cycles (also referred to as M-cycles)\n\t */\n\tm: number;\n\n\t/**\n\t * Clock periods (also referred to as T-cycles)\n\t */\n\tt: number;\n\n\treset(): void;\n}\n\nexport class Clock implements ClockInterface {\n\tpublic t: number = 0;\n\n\tprivate _m: number = 0;\n\n\tget m() {\n\t\treturn this._m;\n\t}\n\n\tset m(value: number) {\n\t\tthis._m = value;\n\t\tthis.t = value * 4;\n\t}\n\n\tpublic reset(): void {\n\t\tthis.m = 0;\n\t}\n}","import {HardwareBusInterface} from '../../../Hardware';\nimport {RegisterKey} from '../../Registers';\nimport {Operator, OperatorInterface} from '../index';\n\nconst loadRegisterIntoRegister = (source: RegisterKey, destination: RegisterKey, hardware: HardwareBusInterface): void => {\n\tconst registers = hardware.registers;\n\n\tregisters[destination] = registers[source];\n\n\tregisters.m = 1;\n};\n\nconst loadByteIntoRegister = (address: number, destination: RegisterKey, hardware: HardwareBusInterface): void => {\n\tconst {memory, registers} = hardware;\n\n\tregisters[destination] = memory.readByte(address);\n\n\tregisters.m = 2;\n};\n\nexport const LoadOperators: OperatorInterface[] = [\n\tnew Operator('LoadRegisterBIntoA', 0x78, (hardware) => loadRegisterIntoRegister('b', 'a', hardware)),\n\tnew Operator('LoadRegisterCIntoA', 0x79, (hardware) => loadRegisterIntoRegister('c', 'a', hardware)),\n\tnew Operator('LoadRegisterDIntoA', 0x7A, (hardware) => loadRegisterIntoRegister('d', 'a', hardware)),\n\tnew Operator('LoadRegisterEIntoA', 0x7B, (hardware) => loadRegisterIntoRegister('e', 'a', hardware)),\n\tnew Operator('LoadRegisterHIntoA', 0x7C, (hardware) => loadRegisterIntoRegister('h', 'a', hardware)),\n\tnew Operator('LoadRegisterLIntoA', 0x7D, (hardware) => loadRegisterIntoRegister('l', 'a', hardware)),\n\tnew Operator('LoadRegisterAIntoA', 0x7F, (hardware) => loadRegisterIntoRegister('a', 'a', hardware)),\n];","import {HardwareBusInterface} from '../../Hardware';\nimport {LoadOperators} from './Operators/Load';\n\nexport type OperatorCallback = (hardware: HardwareBusInterface) => void;\n\nexport interface OperatorInterface {\n\treadonly opcode: number;\n\treadonly name: string;\n\n\tinvoke: OperatorCallback;\n}\n\nexport class Operator implements OperatorInterface {\n\tpublic readonly name: string;\n\tpublic readonly opcode: number;\n\n\tprivate readonly callback: OperatorCallback;\n\n\tpublic constructor(name: string, opcode: number, callback: OperatorCallback) {\n\t\tthis.name = name;\n\t\tthis.opcode = opcode;\n\t\tthis.callback = callback;\n\t}\n\n\tpublic invoke(hardware: HardwareBusInterface): void {\n\t\tthis.callback(hardware);\n\t}\n}\n\nexport interface OperatorSet {\n\t[key: string]: OperatorInterface;\n}\n\nexport interface OperatorManager {\n\tgetByName(name: string): OperatorInterface | null;\n\tgetByCode(opcode: number): OperatorInterface | null;\n\tregister(operator: OperatorInterface): this;\n\tregisterAll(operators: OperatorInterface[]): this;\n\tderegister(operator: OperatorInterface): this;\n}\n\nclass Manager implements OperatorManager {\n\tprivate operators: OperatorSet = {};\n\tprivate opcodes: OperatorInterface[] = [];\n\n\t/**\n\t * Manager constructor.\n\t */\n\tpublic constructor() {\n\t\tthis.opcodes = new Array(256);\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @return {OperatorInterface | null}\n\t */\n\tpublic getByName(name: string): OperatorInterface | null {\n\t\treturn this.operators[name] || null;\n\t}\n\n\t/**\n\t * @param {number} opcode\n\t * @return {OperatorInterface | null}\n\t */\n\tpublic getByCode(opcode: number): OperatorInterface | null {\n\t\treturn this.opcodes[opcode] || null;\n\t}\n\n\t/**\n\t * @param {OperatorInterface} operator\n\t * @return {Manager}\n\t */\n\tpublic register(operator: OperatorInterface): this {\n\t\tthis.operators[operator.name] = operator;\n\t\tthis.operators[operator.opcode] = operator;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {OperatorInterface[]} operators\n\t * @return {Manager}\n\t */\n\tpublic registerAll(operators: OperatorInterface[]): this {\n\t\toperators.forEach(this.register);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {OperatorInterface} operator\n\t * @return {Manager}\n\t */\n\tpublic deregister(operator: OperatorInterface): this {\n\t\tdelete this.operators[operator.name];\n\t\tdelete this.opcodes[operator.opcode];\n\n\t\treturn this;\n\t}\n}\n\nexport const PrimaryInstructions = new Manager();\nexport const BitInstructions = new Manager();\n\nPrimaryInstructions.registerAll([\n\t...LoadOperators,\n]);","import {Clock, ClockInterface} from './Clock';\n\nexport type RegisterKey = 'a' | 'b' | 'c' | 'd' | 'e' | 'h' | 'l' | 'flags' | 'stackPointer' | 'programCount' | 'm' | 't';\n\nexport interface RegisterSetInterface {\n\ta: number;\n\tb: number;\n\tc: number;\n\td: number;\n\te: number;\n\th: number;\n\tl: number;\n\n\tflags: number;\n\n\tstackPointer: number;\n\tprogramCount: number;\n\n\tm: number;\n\tt: number;\n\n\treset(): void;\n}\n\nexport enum RegisterFlag {\n\tCARRY = 0x10,\n\tHALF_CARRY = 0x20,\n\tOPERATION = 0x40,\n\tZERO = 0x80,\n}\n\nexport class RegisterSet implements RegisterSetInterface {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic e: number;\n\tpublic h: number;\n\tpublic l: number;\n\n\tpublic flags: number;\n\n\tpublic stackPointer: number;\n\tpublic programCount: number;\n\n\tprivate clock: ClockInterface;\n\n\tpublic constructor(clock?: ClockInterface) {\n\t\tthis.clock = clock || new Clock();\n\n\t\tthis.reset();\n\t}\n\n\tpublic reset(): void {\n\t\tthis.a = 0;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 0;\n\t\tthis.e = 0;\n\t\tthis.h = 0;\n\t\tthis.l = 0;\n\n\t\tthis.flags = 0;\n\n\t\tthis.stackPointer = 0;\n\t\tthis.programCount = 0;\n\n\t\tthis.clock.reset();\n\t}\n\n\tget m() {\n\t\treturn this.clock.m;\n\t}\n\n\tset m(value: number) {\n\t\tthis.clock.m = value;\n\t}\n\n\tget t() {\n\t\treturn this.clock.t;\n\t}\n\n\tset t(value: number) {\n\t\tthis.clock.t = value;\n\t}\n}","import {HardwareBusAwareInterface, HardwareBusInterface} from '../Hardware';\nimport {toHex} from '../util';\nimport {Clock, ClockInterface} from './Clock';\nimport {PrimaryInstructions} from './InstructionSet';\nimport {RegisterSet, RegisterSetInterface} from './Registers';\n\nexport interface CpuInterface {\n\tclock: ClockInterface;\n\tregisters: RegisterSetInterface;\n\n\tallowInterrupts: boolean;\n\n\thalt: boolean;\n\tstop: boolean;\n\n\tstep(): void;\n\texec(): void;\n\treset(): void;\n}\n\nexport class Cpu implements CpuInterface, HardwareBusAwareInterface {\n\tpublic clock: ClockInterface;\n\tpublic registers: RegisterSetInterface;\n\n\tpublic halt: boolean = false;\n\tpublic stop: boolean = false;\n\tpublic allowInterrupts: boolean = true;\n\n\tprivate hardware: HardwareBusInterface = null;\n\tprivate tickIntervalId: number = null;\n\n\tpublic constructor() {\n\t\tthis.clock = new Clock();\n\t\tthis.registers = new RegisterSet();\n\t}\n\n\tpublic setHardwareBus(hardware: HardwareBusInterface): void {\n\t\tthis.hardware = hardware;\n\t}\n\n\tpublic step(): void {\n\t\tconst opcode = this.hardware.memory.readByte(this.registers.programCount++);\n\t\tconst operator = PrimaryInstructions.getByCode(opcode);\n\n\t\tthis.registers.programCount &= 65535;\n\n\t\tif (!operator)\n\t\t\tthrow new Error(`Instruction ${toHex(opcode)} is not implemented (at ${(this.registers.programCount - 1) & 65535}`);\n\n\t\toperator.invoke(this.hardware);\n\t\tthis.clock.m += this.registers.m;\n\n\t\tthis.hardware.gpu.step();\n\n\t\tconst memory = this.hardware.memory;\n\n\t\tif (this.allowInterrupts && memory.interruptsEnabled && memory.interruptFlags) {\n\t\t\tthis.halt = false;\n\t\t\tthis.allowInterrupts = false;\n\n\t\t\t// const interrupts = memory.interruptsEnabled & memory.interruptFlags;\n\n\t\t\tlet fired = false;\n\n\t\t\t// TODO Add interrupt handling\n\n\t\t\tif (!fired)\n\t\t\t\tthis.allowInterrupts = true;\n\t\t}\n\t}\n\n\tpublic exec(): void {\n\t\tthis.halt = false;\n\t\tthis.stop = false;\n\n\t\tthis.tickIntervalId = setInterval(() => {\n\t\t\tconst frameClock = this.clock.m + 17556;\n\n\t\t\tdo {\n\t\t\t\tthis.step();\n\n\t\t\t\tif (this.halt || this.stop) {\n\t\t\t\t\tclearInterval(this.tickIntervalId);\n\n\t\t\t\t\tthis.tickIntervalId = null;\n\t\t\t\t}\n\t\t\t} while (this.clock.m < frameClock);\n\t\t}, 1);\n\t}\n\n\tpublic reset(): void {\n\t\tthis.clock.reset();\n\t\tthis.registers.reset();\n\n\t\tthis.halt = true;\n\t\tthis.stop = false;\n\t}\n}","export type ColorData = [number, number, number, number];\n\nexport class Color {\n\tpublic readonly data: ColorData;\n\n\tpublic constructor(data: ColorData) {\n\t\tthis.data = data;\n\t}\n\n\tpublic get r(): number {\n\t\treturn this.data[0];\n\t}\n\n\tpublic set r(value: number) {\n\t\tthis.data[0] = value;\n\t}\n\n\tpublic get g(): number {\n\t\treturn this.data[1];\n\t}\n\n\tpublic set g(value: number) {\n\t\tthis.data[1] = value;\n\t}\n\n\tpublic get b(): number {\n\t\treturn this.data[2];\n\t}\n\n\tpublic set b(value: number) {\n\t\tthis.data[2] = value;\n\t}\n\n\tpublic get a(): number {\n\t\treturn this.data[3];\n\t}\n\n\tpublic set a(value: number) {\n\t\tthis.data[3] = value;\n\t}\n\n\tpublic static fromRGB(r: number, g: number, b: number, a: number): Color {\n\t\treturn new Color([r, g, b, a]);\n\t}\n}\n\nexport class Palette {\n\tprivate colors: Color[];\n\n\tpublic constructor() {\n\t\tthis.reset();\n\t}\n\n\tpublic get(index: number): Color {\n\t\tif (index < 0 || index > this.colors.length)\n\t\t\tthrow new Error(`Invalid palette index: ${index}`);\n\n\t\treturn this.colors[index];\n\t}\n\n\tpublic reset(): void {\n\t\tthis.colors = [\n\t\t\tColor.fromRGB(255, 255, 255, 255),\n\t\t\tColor.fromRGB(192, 192, 192, 255),\n\t\t\tColor.fromRGB(96, 96, 96, 255),\n\t\t\tColor.fromRGB(0, 0, 0, 255),\n\t\t];\n\t}\n}","import {HardwareBusAwareInterface, HardwareBusInterface} from '../Hardware';\nimport {Palette} from './Color';\n\nexport interface GpuInterface {\n\tvram: Int16Array;\n\toam: Int16Array;\n\n\tupdateTile(address: number, value: number): void;\n\tupdateOAM(address: number, value: number): void;\n\tstep(): void;\n\treset(): void;\n\n\treadByte(address: number): number;\n\twriteByte(address: number, value: number): void;\n}\n\n/**\n * OAM_READ: 80 ticks\n * VRAM_READ: 172 ticks\n * HBLANK: 204 ticks\n *\n * Full line = OAM_READ + VRAM_READ + HBLANK = 456 ticks\n */\nexport enum RenderingMode {\n\tHBLANK,\n\tVBLANK,\n\tOAM_READ,\n\tVRAM_READ,\n}\n\nexport class Gpu implements GpuInterface, HardwareBusAwareInterface {\n\tpublic vram: Int16Array;\n\tpublic oam: Int16Array;\n\n\tprivate canvas: HTMLCanvasElement;\n\tprivate context: CanvasRenderingContext2D;\n\tprivate screen: ImageData;\n\tprivate tileset: number[][][];\n\tprivate palette: Palette;\n\n\tprivate scrollX: number = 0;\n\tprivate scrollY: number = 0;\n\tprivate bgMap = false;\n\tprivate bgTile = 0;\n\tprivate mode = RenderingMode.HBLANK;\n\tprivate modeClock = 0;\n\tprivate line = 0;\n\n\tprivate hardware: HardwareBusInterface = null;\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t\tthis.palette = new Palette();\n\n\t\tthis.reset();\n\t}\n\n\tpublic updateTile(address: number, value: number): void {\n\t\taddress &= 0x1FFE;\n\n\t\tconst tile = (address >> 4) & 511;\n\t\tconst y = (address >> 1) & 7;\n\n\t\tlet sx;\n\n\t\tfor (let x = 0; x < 8; x++) {\n\t\t\tsx = 1 << (7 - x);\n\n\t\t\tthis.tileset[tile][y][x] = (this.vram[address] & sx ? 1 : 0) | (this.vram[address + 1] & sx ? 2 : 0);\n\t\t}\n\t}\n\n\tpublic updateOAM(address: number, value: number): void {\n\n\t}\n\n\tpublic step(): void {\n\t\tthis.modeClock += this.hardware.cpu.registers.t;\n\n\t\tswitch (this.mode) {\n\t\t\tcase RenderingMode.OAM_READ:\n\t\t\t\tif (this.modeClock >= 80) {\n\t\t\t\t\tthis.modeClock = 0;\n\t\t\t\t\tthis.mode = RenderingMode.VRAM_READ;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RenderingMode.VRAM_READ:\n\t\t\t\tif (this.modeClock >= 172) {\n\t\t\t\t\tthis.modeClock = 0;\n\t\t\t\t\tthis.mode = RenderingMode.HBLANK;\n\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RenderingMode.HBLANK:\n\t\t\t\tif (this.modeClock >= 204) {\n\t\t\t\t\tthis.modeClock = 0;\n\n\t\t\t\t\tif (++this.line === 143) {\n\t\t\t\t\t\tthis.mode = RenderingMode.VBLANK;\n\n\t\t\t\t\t\tthis.context.putImageData(this.screen, 0, 0);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis.mode = RenderingMode.OAM_READ;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RenderingMode.VBLANK:\n\t\t\t\tif (this.modeClock >= 456) {\n\t\t\t\t\tthis.modeClock = 0;\n\n\t\t\t\t\tif (++this.line > 153) {\n\t\t\t\t\t\tthis.mode = RenderingMode.OAM_READ;\n\t\t\t\t\t\tthis.line = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic reset(): void {\n\t\tthis.palette.reset();\n\n\t\tthis.vram = new Int16Array(1 << 13); // 8k\n\t\tthis.oam = new Int16Array(160);\n\n\t\tthis.context = this.canvas.getContext('2d');\n\t\tthis.screen = this.context.createImageData(160, 144);\n\n\t\tthis.context.putImageData(this.screen, 0, 0);\n\n\t\tthis.tileset = [];\n\n\t\tfor (let i = 0; i < 512; i++) {\n\t\t\tthis.tileset.push([]);\n\n\t\t\tfor (let j = 0; j < 8; j++)\n\t\t\t\tthis.tileset[i].push((new Array(8).fill(0)));\n\t\t}\n\t}\n\n\tpublic readByte(address: number): number {\n\t\tconsole.log(address - 0xFF40);\n\n\t\treturn 0;\n\t}\n\n\tpublic writeByte(address: number, value: number): void {\n\t\tconsole.log(address - 0xFF40);\n\t}\n\n\tpublic setHardwareBus(hardware: HardwareBusInterface): void {\n\t\tthis.hardware = hardware\n\t}\n\n\tprotected render(): void {\n\t\tlet mapOffset = this.bgMap ? 0x1C00 : 0x1800;\n\t\tmapOffset += ((this.line + this.scrollY) & 255) >> 3;\n\n\t\tlet lineOffset = this.scrollX >> 3;\n\n\t\tlet y = (this.line + this.scrollY) & 7;\n\t\tlet x = this.scrollX & 7;\n\n\t\tlet canvasOffset = this.line * 160 * 4;\n\n\t\tlet tile = this.vram[mapOffset + lineOffset];\n\n\t\tif (this.bgTile === 1 && tile < 128)\n\t\t\ttile += 256;\n\n\t\tfor (let i = 0; i < 160; i++) {\n\t\t\tlet color = this.palette.get(this.tileset[tile][y][x]);\n\n\t\t\tthis.screen.data[canvasOffset++] = color.r;\n\t\t\tthis.screen.data[canvasOffset++] = color.g;\n\t\t\tthis.screen.data[canvasOffset++] = color.b;\n\t\t\tthis.screen.data[canvasOffset++] = color.a;\n\n\t\t\tif (++x === 8) {\n\t\t\t\tx = 0;\n\n\t\t\t\tlineOffset = (lineOffset + 1) & 31;\n\t\t\t\ttile = this.vram[mapOffset + lineOffset];\n\n\t\t\t\tif (this.bgTile === 1 && tile < 128)\n\t\t\t\t\ttile += 256;\n\t\t\t}\n\t\t}\n\t}\n}","import {CpuInterface} from './CPU/index';\nimport {RegisterSetInterface} from './CPU/Registers';\nimport {GpuInterface} from './GPU/index';\nimport {MemoryInterface} from './Memory/index';\n\nexport interface HardwareBusInterface {\n\treadonly cpu: CpuInterface;\n\treadonly memory: MemoryInterface;\n\treadonly gpu: GpuInterface;\n\treadonly registers: RegisterSetInterface;\n}\n\nexport interface HardwareBusAwareInterface {\n\tsetHardwareBus(hardware: HardwareBusInterface): void;\n}\n\nexport class HardwareBus implements HardwareBusInterface {\n\tpublic readonly cpu: CpuInterface;\n\tpublic readonly memory: MemoryInterface;\n\tpublic readonly gpu: GpuInterface;\n\n\tpublic constructor(cpu: CpuInterface, memory: MemoryInterface, gpu: GpuInterface) {\n\t\tthis.cpu = cpu;\n\t\tthis.memory = memory;\n\t\tthis.gpu = gpu;\n\t}\n\n\tget registers(): RegisterSetInterface {\n\t\treturn this.cpu.registers;\n\t}\n}","export const bios = [\n\t0x31, 0xFE, 0xFF, 0xAF, 0x21, 0xFF, 0x9F, 0x32, 0xCB, 0x7C, 0x20, 0xFB, 0x21, 0x26, 0xFF, 0x0E,\n\t0x11, 0x3E, 0x80, 0x32, 0xE2, 0x0C, 0x3E, 0xF3, 0xE2, 0x32, 0x3E, 0x77, 0x77, 0x3E, 0xFC, 0xE0,\n\t0x47, 0x11, 0x04, 0x01, 0x21, 0x10, 0x80, 0x1A, 0xCD, 0x95, 0x00, 0xCD, 0x96, 0x00, 0x13, 0x7B,\n\t0xFE, 0x34, 0x20, 0xF3, 0x11, 0xD8, 0x00, 0x06, 0x08, 0x1A, 0x13, 0x22, 0x23, 0x05, 0x20, 0xF9,\n\t0x3E, 0x19, 0xEA, 0x10, 0x99, 0x21, 0x2F, 0x99, 0x0E, 0x0C, 0x3D, 0x28, 0x08, 0x32, 0x0D, 0x20,\n\t0xF9, 0x2E, 0x0F, 0x18, 0xF3, 0x67, 0x3E, 0x64, 0x57, 0xE0, 0x42, 0x3E, 0x91, 0xE0, 0x40, 0x04,\n\t0x1E, 0x02, 0x0E, 0x0C, 0xF0, 0x44, 0xFE, 0x90, 0x20, 0xFA, 0x0D, 0x20, 0xF7, 0x1D, 0x20, 0xF2,\n\t0x0E, 0x13, 0x24, 0x7C, 0x1E, 0x83, 0xFE, 0x62, 0x28, 0x06, 0x1E, 0xC1, 0xFE, 0x64, 0x20, 0x06,\n\t0x7B, 0xE2, 0x0C, 0x3E, 0x87, 0xF2, 0xF0, 0x42, 0x90, 0xE0, 0x42, 0x15, 0x20, 0xD2, 0x05, 0x20,\n\t0x4F, 0x16, 0x20, 0x18, 0xCB, 0x4F, 0x06, 0x04, 0xC5, 0xCB, 0x11, 0x17, 0xC1, 0xCB, 0x11, 0x17,\n\t0x05, 0x20, 0xF5, 0x22, 0x23, 0x22, 0x23, 0xC9, 0xCE, 0xED, 0x66, 0x66, 0xCC, 0x0D, 0x00, 0x0B,\n\t0x03, 0x73, 0x00, 0x83, 0x00, 0x0C, 0x00, 0x0D, 0x00, 0x08, 0x11, 0x1F, 0x88, 0x89, 0x00, 0x0E,\n\t0xDC, 0xCC, 0x6E, 0xE6, 0xDD, 0xDD, 0xD9, 0x99, 0xBB, 0xBB, 0x67, 0x63, 0x6E, 0x0E, 0xEC, 0xCC,\n\t0xDD, 0xDC, 0x99, 0x9F, 0xBB, 0xB9, 0x33, 0x3E, 0x3c, 0x42, 0xB9, 0xA5, 0xB9, 0xA5, 0x42, 0x4C,\n\t0x21, 0x04, 0x01, 0x11, 0xA8, 0x00, 0x1A, 0x13, 0xBE, 0x20, 0xFE, 0x23, 0x7D, 0xFE, 0x34, 0x20,\n\t0xF5, 0x06, 0x19, 0x78, 0x86, 0x23, 0x05, 0x20, 0xFB, 0x86, 0x20, 0xFE, 0x3E, 0x01, 0xE0, 0x50,\n];","import {HardwareBusAwareInterface, HardwareBusInterface} from '../Hardware';\nimport {bios} from './Bios';\n\nexport interface MemoryInterface {\n\tbios: number[]; // 256b\n\trom: number[]; // 32k\n\teram: number[]; // 8k\n\twram: number[]; // 8k\n\tzram: number[]; // 128b\n\n\tinterruptsEnabled: number;\n\tinterruptFlags: number;\n\n\treadByte(address: number): number;\n\treadWord(address: number): number;\n\twriteByte(address: number, value: number): void;\n\twriteWord(address: number, value: number): void;\n\n\tload(file: File): Promise<FileReader>;\n\treset(): void;\n}\n\nexport class Memory implements MemoryInterface, HardwareBusAwareInterface {\n\tpublic bios: number[];\n\n\tpublic rom: number[];\n\tpublic eram: number[];\n\tpublic wram: number[];\n\tpublic zram: number[];\n\tpublic interruptsEnabled: number;\n\tpublic interruptFlags: number;\n\n\tprivate inBios: boolean = true;\n\tprivate hardware: HardwareBusInterface = null;\n\n\tpublic constructor() {\n\t\tthis.bios = bios;\n\n\t\tthis.reset();\n\t}\n\n\tpublic readByte(address: number): number {\n\t\tconst masked = address & 0xF000;\n\n\t\tif (masked === 0x0000) { // BIOS / High ROM0\n\t\t\tif (this.inBios) {\n\t\t\t\tif (address < 0x0100)\n\t\t\t\t\treturn this.bios[address];\n\t\t\t\telse if (this.hardware.cpu.registers.programCount >= 0x0100)\n\t\t\t\t\tthis.inBios = false;\n\t\t\t}\n\n\t\t\treturn this.rom[address];\n\t\t} else if (masked <= 0x7000) // ROM0 / ROM1 (unbanked)\n\t\t\treturn this.rom[address];\n\t\telse if (masked <= 0x9000) // Video RAM\n\t\t\treturn this.hardware.gpu.vram[address & 0x1FFF];\n\t\telse if (masked <= 0xB000) // External RAM\n\t\t\treturn this.eram[address & 0x1FFF];\n\t\telse if (masked <= 0xFD00) // Working RAM and WRAM shadow\n\t\t\treturn this.wram[address & 0x1FFF];\n\t\telse {\n\t\t\tconst lowMasked = address & 0x0F00;\n\n\t\t\tif (lowMasked === 0xE00) { // Graphics object attribute memory (OAM)\n\t\t\t\tif (address < 0xFEA0)\n\t\t\t\t\treturn this.hardware.gpu.oam[address & 0xFF];\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t} else if (lowMasked === 0xF00) { // Zero-page RAM\n\t\t\t\tif (address === 0xFFFF)\n\t\t\t\t\treturn this.interruptsEnabled;\n\t\t\t\tif (address >= 0xFF80)\n\t\t\t\t\treturn this.zram[address & 0x7F];\n\t\t\t\telse {\n\t\t\t\t\tconst ioMasked = address & 0xF0;\n\n\t\t\t\t\tif (ioMasked === 0x00) {\n\t\t\t\t\t\tconst handlerMask = ioMasked & 0xF;\n\n\t\t\t\t\t\tif (handlerMask === 0)\n\t\t\t\t\t\t\tthrow new Error('KEY not yet implemented');\n\t\t\t\t\t\telse if (handlerMask >= 4 && handlerMask <= 7)\n\t\t\t\t\t\t\tthrow new Error('TIMER not yet implemented');\n\t\t\t\t\t\telse if (handlerMask === 15)\n\t\t\t\t\t\t\treturn this.interruptFlags;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (ioMasked >= 0x40 && ioMasked <= 0x70)\n\t\t\t\t\t\treturn this.hardware.gpu.readByte(address);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readWord(address: number): number {\n\t\treturn this.readByte(address) + (this.readByte(address + 1) << 8);\n\t}\n\n\tpublic writeByte(address: number, value: number): void {\n\t\tconst masked = address & 0xF000;\n\n\t\tif (masked <= 0x7000) // BIOS and ROM are not writable\n\t\t\tthrow new Error(`Tried to write BIOS or ROM (0x${address.toString(16).toUpperCase()})`);\n\t\telse if (masked <= 0x9000) { // Video RAM\n\t\t\tconst mapped = address & 0x1FFF;\n\n\t\t\tthis.hardware.gpu.vram[mapped] = value;\n\t\t\tthis.hardware.gpu.updateTile(mapped, value); // TODO this may need to be the full address, not the mapped one\n\t\t} else if (masked <= 0xB000) // External RAM\n\t\t\tthis.eram[address & 0x1FFF] = value;\n\t\telse if (masked <= 0xFD000) // Working RAM / WRAM shadow\n\t\t\tthis.wram[address & 0x1FFF] = value;\n\t\telse {\n\t\t\tconst lowMasked = address & 0x0F00;\n\n\t\t\tif (lowMasked === 0xE00) {\n\t\t\t\tconst mapped = address & 0xFF;\n\n\t\t\t\tif (mapped < 0xA0)\n\t\t\t\t\treturn;\n\n\t\t\t\tthis.hardware.gpu.updateOAM(mapped, value);\n\t\t\t} else if (lowMasked === 0xF00) { // Zero-page RAM\n\t\t\t\tif (address === 0xFFFF)\n\t\t\t\t\tthis.interruptsEnabled = value;\n\t\t\t\telse if (address >= 0xFF80)\n\t\t\t\t\tthis.zram[address & 0x7F] = value;\n\t\t\t\telse {\n\t\t\t\t\tconst ioMasked = address & 0xF0;\n\n\t\t\t\t\tif (ioMasked === 0x00) {\n\t\t\t\t\t\tconst handlerMask = ioMasked & 0xF;\n\n\t\t\t\t\t\tif (handlerMask === 0)\n\t\t\t\t\t\t\tthrow new Error('KEY not yet implemented');\n\t\t\t\t\t\telse if (handlerMask >= 4 && handlerMask <= 7)\n\t\t\t\t\t\t\tthrow new Error('TIMER not yet implemented');\n\t\t\t\t\t\telse if (handlerMask === 15)\n\t\t\t\t\t\t\tthis.interruptFlags = value;\n\t\t\t\t\t} else if (ioMasked >= 0x40 && ioMasked <= 0x70)\n\t\t\t\t\t\tthis.hardware.gpu.writeByte(address, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic writeWord(address: number, value: number): void {\n\t\tthis.writeByte(address, value & 255);\n\t\tthis.writeByte(address + 1, value >> 8);\n\t}\n\n\tpublic setHardwareBus(hardware: HardwareBusInterface): void {\n\t\tthis.hardware = hardware;\n\t}\n\n\tpublic load(file: File): Promise<FileReader> {\n\t\tconst reader = new FileReader();\n\n\t\treturn new Promise<FileReader>((resolve, reject) => {\n\t\t\treader.addEventListener('load', () => {\n\t\t\t\tthis.rom = reader.result.split('').map((char: string) => char.charCodeAt(0));\n\n\t\t\t\tresolve(reader);\n\t\t\t});\n\n\t\t\treader.addEventListener('error', () => reject(reader.error));\n\t\t\treader.addEventListener('abort', () => reject(null));\n\n\t\t\treader.readAsBinaryString(file);\n\t\t});\n\t}\n\n\tpublic reset(): void {\n\t\tthis.inBios = true;\n\n\t\tthis.rom = (new Array(1 << 15)).fill(0); // 32k\n\t\tthis.eram = (new Array(1 << 13)).fill(0); // 8k\n\t\tthis.wram = (new Array(1 << 13)).fill(0); // 8k\n\t\tthis.zram = (new Array(128)).fill(0); // 128b\n\n\t\tthis.interruptsEnabled = 0;\n\t\tthis.interruptFlags = 0;\n\t}\n}","export const toBinary = (value: number): string => {\n\treturn value.toString(2);\n};\n\nexport const toHex = (value: number): string => {\n\treturn value.toString(16).toUpperCase();\n};","import {RegisterKey, RegisterSetInterface} from './Emulator/CPU/Registers';\nimport {HardwareBusInterface} from './Emulator/Hardware';\n\nconst registerKeys: RegisterKey[] = ['a', 'b', 'c', 'd', 'e', 'h', 'l', 'flags', 'programCount', 'stackPointer', 'm', 't'];\n\nclass RegisterMonitor {\n\tprivate static attached: boolean = false;\n\tprivate static registers: RegisterSetInterface = null;\n\tprivate static elements: {[key: string]: HTMLElement} = {};\n\n\tpublic static update(): void {\n\t\tif (!this.attached)\n\t\t\treturn;\n\n\t\tObject.keys(this.elements).forEach(key => {\n\t\t\tif (!this.elements[key])\n\t\t\t\treturn;\n\n\t\t\tlet value = this.registers[<RegisterKey>key].toString(16);\n\n\t\t\tif (value.length < 2)\n\t\t\t\tvalue = `0${value}`;\n\n\t\t\tthis.elements[key].textContent = '0x' + value;\n\t\t});\n\t}\n\n\tpublic static attach(root: HTMLElement, registers: RegisterSetInterface) {\n\t\tregisterKeys.forEach(key => {\n\t\t\tthis.elements[key] = root.querySelector(`#register-${key}`);\n\t\t});\n\n\t\tthis.attached = true;\n\t\tthis.registers = registers;\n\t}\n}\n\nexport default class Monitor {\n\tprivate static updateIntervalId: number = null;\n\n\tpublic static attach(root: HTMLElement, hardware: HardwareBusInterface) {\n\t\tRegisterMonitor.attach(root.querySelector('#registers'), hardware.registers);\n\n\t\tthis.updateIntervalId = setInterval(() => {\n\t\t\tRegisterMonitor.update();\n\t\t});\n\t}\n}","import {Cpu} from './Emulator/CPU/index';\nimport {Gpu} from './Emulator/GPU/index';\nimport {HardwareBus} from './Emulator/Hardware';\nimport {Memory} from './Emulator/Memory/index';\nimport Monitor from './Monitor';\n\nconst cpu = new Cpu();\nconst memory = new Memory();\nconst gpu = new Gpu(<HTMLCanvasElement>document.getElementById('screen'));\n\nconst hardware = new HardwareBus(cpu, memory, gpu);\n\ncpu.setHardwareBus(hardware);\nmemory.setHardwareBus(hardware);\ngpu.setHardwareBus(hardware);\n\nMonitor.attach(document.querySelector('#monitor'), hardware);\n\nconst romLoader = <HTMLInputElement>document.getElementById('rom-loader');\n\nromLoader.addEventListener('change', () => {\n\tgpu.reset();\n\tmemory.reset();\n\tcpu.reset();\n\n\tcpu.halt = true;\n\n\tif (!romLoader.files.length)\n\t\treturn;\n\n\tmemory.load(romLoader.files[0]).then(() => cpu.exec());\n});"],"sourceRoot":""}